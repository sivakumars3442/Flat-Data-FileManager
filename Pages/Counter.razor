@page "/counter"
@using Amazon;
@using Amazon.S3;
@using Amazon.S3.Model;
@using Amazon.S3.Transfer;
@using System.Text;
@using System.Text.Json;
@using Syncfusion.Blazor.FileManager;
@using TestSyncfusion.Data;
@inject CloudService CloudService;
@inject CloudServiceOperations CloudServiceOperations;
@inject IJSRuntime JsRuntime;
<div class="control-section">
	@* Initialization of default File Manager component *@
	@if (directoryContentList != null)
	{
		<SfFileManager TValue="FileManagerDirectoryContent" FileData="directoryContentList">
			<FileManagerEvents TValue="FileManagerDirectoryContent" BeforeImageLoad="BeforeImageLoad" FileSelected="FileSelected" FileSelection="FileSelection" FileOperations="FileOperations"></FileManagerEvents>
		</SfFileManager>
	}
	@if (directoryContentList == null)
	{
		<h1>Waiting for server response to get the initial object of FileManager component...</h1>
	}
</div>
@code{
	public List<FileManagerDirectoryContent> directoryContentList;
	public List<FileManagerDirectoryContent> Data = new List<FileManagerDirectoryContent>();
	public HttpClient HttpClientInstance = new HttpClient();
	protected override async Task OnInitializedAsync()
	{
		await CloudService.GetData();
		var data = CloudService.FileData;
		directoryContentList = CloudService.FileData;
	}

	public void FileOperations(FileOperationsEventArgs<FileManagerDirectoryContent> args)
	{
		if (args.Action == "read")
		{
			args.Cancel = true;
			args.Response = CloudServiceOperations.Read(args.Path, args.DataSource, args.FileDetails);
		}
	}

	public void FileSelected(FileSelectEventArgs<FileManagerDirectoryContent> args)
	{

	}

	public void FileSelection(FileSelectionEventArgs<FileManagerDirectoryContent> args)
	{
		
	}

	public void BeforeImageLoad(BeforeImageLoadEventArgs<FileManagerDirectoryContent> args)
	{

	}
}

