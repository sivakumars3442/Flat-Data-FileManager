@page "/"
@using Syncfusion.Blazor.FileManager;
@using TestSyncfusion.Data;
@inject IJSRuntime JsRuntime;
@inject FileService FileService;
<div class="control-section">
	@* Initialization of default File Manager component *@
	<SfFileManager TValue="FileManagerDirectoryContent" FileData="Data">
		<FileManagerEvents TValue="FileManagerDirectoryContent" FileOperations="Operations" FileSelection="FileSelection" FileSelected="FileSelected"></FileManagerEvents>
	</SfFileManager>
</div>
@code{
	public List<FileManagerDirectoryContent> Data { get; set; }
	protected override async Task OnInitializedAsync()
	{
		Data = await GetFlatFileEntries();
	}
	public void Operations(FileOperationsEventArgs<FileManagerDirectoryContent> args)
	{
		if (args.Action == "read")
		{
			args.Response = FileService.Read(args.Path, args.DataSource, args.FileDetails);
		}
		if(args.Action == "delete")
		{
			args.Response = FileService.Delete(args.Path, args.DataSource, args.FileDetails);
		}
		if(args.Action == "details")
		{
			args.Response = FileService.Details(args.Path, args.DataSource, args.FileDetails);
		}
		if(args.Action == "create")
		{
			args.Response = FileService.Create(args.Path, args.CreatedFolderName, args.DataSource, args.FileDetails);
		}
		if(args.Action == "search")
		{
			args.Response = FileService.Search(args.Path, args.SearchString, args.DataSource, args.FileDetails);
		}
		if(args.Action == "rename")
		{
			args.Response = FileService.Rename(args.Path, args.NewName, args.DataSource, args.FileDetails);
		}
		if(args.Action == "move")
		{
			args.Response = FileService.Move(args.Path, args.TargetData, args.DataSource, args.FileDetails);
		}
		if(args.Action == "copy")
        {
            args.Response = FileService.Copy(args.Path, args.TargetData, args.DataSource, args.FileDetails);
        }
	}
	public void FileSelected(FileSelectEventArgs<FileManagerDirectoryContent> args)
	{
		
	}
	public void FileSelection(FileSelectionEventArgs<FileManagerDirectoryContent> args)
    {
        
    }
	private async Task<List<FileManagerDirectoryContent>> GetFlatFileEntries()
	{
		List<FileManagerDirectoryContent> Data = new List<FileManagerDirectoryContent>();
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
            FilterPath = "",
			FilterId = "",
            HasChild = true,
            Id = "0",
            IsFile = false,
            Name = "Files",
            ParentId = null,
            ShowHiddenItems = false,
            Size = 0,
            Type = "folder"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = false,
			Id = "1",
			IsFile = false,
			Name = "Documents",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = false,
			Id = "2",
			IsFile = false,
			Name = "Downloads",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = true,
			Id = "3",
			IsFile = false,
			Name = "Pictures",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = false,
			Id = "4",
			IsFile = false,
			Name = "Music",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = false,
			Id = "5",
			IsFile = false,
			Name = "Videos",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/",
			FilterPath = "/",
			HasChild = true,
			Id = "12",
			IsFile = false,
			Name = "Testing",
			ParentId = "0",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/12/",
			FilterPath = "/Testing/",
			HasChild = true,
			Id = "13",
			IsFile = false,
			Name = "Testing-Nested",
			ParentId = "12",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/12/13/",
			FilterPath = "/Testing/Testing-Nested/",
			HasChild = false,
			Id = "14",
			IsFile = false,
			Name = "Testing-Third-level",
			ParentId = "13",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
		});
		Data.Add(new FileManagerDirectoryContent()
        {
			CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/1/",
            FilterPath = "/Documents/",
			HasChild = false,
			Id = "6",
			IsFile = true,
			Name = "EJ2 File Manager.docx",
			ParentId = "1",
			ShowHiddenItems = false,
			Size = 12403,
			Type = ".docx"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
			CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/2/",
            FilterPath = "/Downloads/",
			HasChild = false,
			Id = "7",
			IsFile = true,
			Name = "EJ2 File Manager.pdf",
			ParentId = "2",
			ShowHiddenItems = false,
			Size = 90099,
			Type = ".pdf"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
            FilterId ="0/3/",
            FilterPath = "/Pictures/",
            HasChild = false,
            Id = "8",
            IsFile = true,
            Name = "File Manager PPT.pptx",
            ParentId = "3",
            ShowHiddenItems = false,
            Size = 578010,
            Type = ".pptx"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
            FilterId ="0/3/",
            FilterPath = "/Pictures/",
            HasChild = false,
            Id = "15",
            IsFile = true,
            Name = "Text Document.txt",
            ParentId = "3",
            ShowHiddenItems = false,
            Size = 578010,
            Type = ".txt"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
            FilterId ="0/4/",
            FilterPath = "/Music/",
            HasChild = false,
            Id = "9",
            IsFile = true,
            Name = "File Manager.txt",
            ParentId = "4",
            ShowHiddenItems = false,
            Size = 274,
            Type = ".txt"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
			CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
			FilterId ="0/3/",
			FilterPath = "/Pictures/",
			HasChild = false,
			Id = "10",
			IsFile = false,
			Name = "Employees",
			ParentId = "3",
			ShowHiddenItems = false,
			Size = 0,
			Type = "folder"
        });
		Data.Add(new FileManagerDirectoryContent()
        {
            CaseSensitive = false,
            DateCreated = new DateTime(2022, 1, 2),
            DateModified = new DateTime(2022, 2, 3),
            FilterId ="0/1/10/",
            FilterPath = "/Pictures/Employees/",
            HasChild = false,
            Id = "11",
            IsFile = true,
            Name = "1.pdf",
            ParentId = "10",
            ShowHiddenItems = false,
            Size = 49792,
            Type = ".pdf"
        });
		return Data;
	}
}
